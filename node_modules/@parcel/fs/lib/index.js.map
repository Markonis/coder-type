{"mappings":"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","sources":["packages/core/fs/src/index.js","packages/core/fs/src/NodeFS.js","node_modules/graceful-fs/graceful-fs.js","node_modules/graceful-fs/polyfills.js","node_modules/graceful-fs/legacy-streams.js","node_modules/graceful-fs/clone.js","node_modules/ncp/lib/ncp.js","packages/core/fs/package.json","packages/core/fs/src/find.js","packages/core/fs/src/MemoryFS.js","node_modules/nullthrows/nullthrows.js","packages/core/fs/src/OverlayFS.js"],"sourcesContent":["// @flow strict-local\nimport type {FileSystem} from './types';\nimport type {FilePath} from '@parcel/types';\nimport type {Readable, Writable} from 'stream';\n\nimport path from 'path';\nimport stream from 'stream';\nimport {promisify} from 'util';\n\nexport type * from './types';\nexport * from './NodeFS';\nexport * from './MemoryFS';\nexport * from './OverlayFS';\n\nconst pipeline: (Readable, Writable) => Promise<void> = promisify(\n  stream.pipeline,\n);\n\n// Recursively copies a directory from the sourceFS to the destinationFS\nexport async function ncp(\n  sourceFS: FileSystem,\n  source: FilePath,\n  destinationFS: FileSystem,\n  destination: FilePath,\n) {\n  await destinationFS.mkdirp(destination);\n  let files = await sourceFS.readdir(source);\n  for (let file of files) {\n    let sourcePath = path.join(source, file);\n    let destPath = path.join(destination, file);\n    let stats = await sourceFS.stat(sourcePath);\n    if (stats.isFile()) {\n      await pipeline(\n        sourceFS.createReadStream(sourcePath),\n        destinationFS.createWriteStream(destPath),\n      );\n    } else if (stats.isDirectory()) {\n      await ncp(sourceFS, sourcePath, destinationFS, destPath);\n    }\n  }\n}\n","// @flow\nimport type {ReadStream, Stats} from 'fs';\nimport type {Writable} from 'stream';\nimport type {FileOptions, FileSystem, Encoding} from './types';\nimport type {FilePath} from '@parcel/types';\nimport type {\n  Event,\n  Options as WatcherOptions,\n  AsyncSubscription,\n} from '@parcel/watcher';\n\nimport fs from 'graceful-fs';\nimport nativeFS from 'fs';\nimport ncp from 'ncp';\nimport {promisify} from 'util';\nimport {registerSerializableClass} from '@parcel/core';\nimport {hashFile} from '@parcel/utils';\nimport watcher from '@parcel/watcher';\nimport packageJSON from '../package.json';\n\nimport * as searchNative from '@parcel/fs-search';\nimport * as searchJS from './find';\n\n// Most of this can go away once we only support Node 10+, which includes\n// require('fs').promises\n\nconst realpath = promisify(\n  process.platform === 'win32' ? fs.realpath : fs.realpath.native,\n);\nconst isPnP = process.versions.pnp != null;\n\nexport class NodeFS implements FileSystem {\n  readFile: any = promisify(fs.readFile);\n  copyFile: any = promisify(fs.copyFile);\n  stat: any = promisify(fs.stat);\n  readdir: any = promisify(fs.readdir);\n  unlink: any = promisify(fs.unlink);\n  utimes: any = promisify(fs.utimes);\n  ncp: any = promisify(ncp);\n  createReadStream: (path: string, options?: any) => ReadStream =\n    fs.createReadStream;\n  cwd: () => string = () => process.cwd();\n  chdir: (directory: string) => void = directory => process.chdir(directory);\n\n  statSync: (path: string) => Stats = path => fs.statSync(path);\n  realpathSync: (path: string, cache?: any) => string =\n    process.platform === 'win32' ? fs.realpathSync : fs.realpathSync.native;\n  existsSync: (path: string) => boolean = fs.existsSync;\n  readdirSync: any = (fs.readdirSync: any);\n  findAncestorFile: any = isPnP\n    ? (...args) => searchJS.findAncestorFile(this, ...args)\n    : searchNative.findAncestorFile;\n  findNodeModule: any = isPnP\n    ? (...args) => searchJS.findNodeModule(this, ...args)\n    : searchNative.findNodeModule;\n  findFirstFile: any = isPnP\n    ? (...args) => searchJS.findFirstFile(this, ...args)\n    : searchNative.findFirstFile;\n\n  createWriteStream(filePath: string, options: any): Writable {\n    // Make createWriteStream atomic\n    let tmpFilePath = getTempFilePath(filePath);\n    let failed = false;\n\n    const move = async () => {\n      if (!failed) {\n        try {\n          await fs.promises.rename(tmpFilePath, filePath);\n        } catch (e) {\n          // This is adapted from fs-write-stream-atomic. Apparently\n          // Windows doesn't like renaming when the target already exists.\n          if (\n            process.platform === 'win32' &&\n            e.syscall &&\n            e.syscall === 'rename' &&\n            e.code &&\n            e.code === 'EPERM'\n          ) {\n            let [hashTmp, hashTarget] = await Promise.all([\n              hashFile(this, tmpFilePath),\n              hashFile(this, filePath),\n            ]);\n\n            await this.unlink(tmpFilePath);\n\n            if (hashTmp != hashTarget) {\n              throw e;\n            }\n          }\n        }\n      }\n    };\n\n    let writeStream = fs.createWriteStream(tmpFilePath, {\n      ...options,\n      fs: {\n        ...fs,\n        close: (fd, cb) => {\n          fs.close(fd, err => {\n            if (err) {\n              cb(err);\n            } else {\n              move().then(\n                () => cb(),\n                err => cb(err),\n              );\n            }\n          });\n        },\n      },\n    });\n\n    writeStream.once('error', () => {\n      failed = true;\n      fs.unlinkSync(tmpFilePath);\n    });\n\n    return writeStream;\n  }\n\n  async writeFile(\n    filePath: FilePath,\n    contents: Buffer | string,\n    options: ?FileOptions,\n  ): Promise<void> {\n    let tmpFilePath = getTempFilePath(filePath);\n    await fs.promises.writeFile(tmpFilePath, contents, options);\n    await fs.promises.rename(tmpFilePath, filePath);\n  }\n\n  readFileSync(filePath: FilePath, encoding?: Encoding): any {\n    if (encoding != null) {\n      return fs.readFileSync(filePath, encoding);\n    }\n    return fs.readFileSync(filePath);\n  }\n\n  async realpath(originalPath: string): Promise<string> {\n    try {\n      return await realpath(originalPath, 'utf8');\n    } catch (e) {\n      // do nothing\n    }\n\n    return originalPath;\n  }\n\n  exists(filePath: FilePath): Promise<boolean> {\n    return new Promise(resolve => {\n      fs.exists(filePath, resolve);\n    });\n  }\n\n  watch(\n    dir: FilePath,\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    opts: WatcherOptions,\n  ): Promise<AsyncSubscription> {\n    return watcher.subscribe(dir, fn, opts);\n  }\n\n  getEventsSince(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<Array<Event>> {\n    return watcher.getEventsSince(dir, snapshot, opts);\n  }\n\n  async writeSnapshot(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<void> {\n    await watcher.writeSnapshot(dir, snapshot, opts);\n  }\n\n  static deserialize(): NodeFS {\n    return new NodeFS();\n  }\n\n  serialize(): null {\n    return null;\n  }\n\n  async mkdirp(filePath: FilePath): Promise<void> {\n    await nativeFS.promises.mkdir(filePath, {recursive: true});\n  }\n\n  async rimraf(filePath: FilePath): Promise<void> {\n    if (fs.promises.rm) {\n      await fs.promises.rm(filePath, {recursive: true, force: true});\n      return;\n    }\n\n    // fs.promises.rm is not supported in node 12...\n    let stat;\n    try {\n      stat = await this.stat(filePath);\n    } catch (err) {\n      return;\n    }\n\n    if (stat.isDirectory()) {\n      // $FlowFixMe\n      await nativeFS.promises.rmdir(filePath, {recursive: true});\n    } else {\n      await nativeFS.promises.unlink(filePath);\n    }\n  }\n}\n\nregisterSerializableClass(`${packageJSON.version}:NodeFS`, NodeFS);\n\nlet writeStreamCalls = 0;\n\nlet threadId;\ntry {\n  ({threadId} = require('worker_threads'));\n} catch {\n  //\n}\n\n// Generate a temporary file path used for atomic writing of files.\nfunction getTempFilePath(filePath: FilePath) {\n  writeStreamCalls = writeStreamCalls % Number.MAX_SAFE_INTEGER;\n  return (\n    filePath +\n    '.' +\n    process.pid +\n    (threadId != null ? '.' + threadId : '') +\n    '.' +\n    (writeStreamCalls++).toString(36)\n  );\n}\n","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          retry()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      retry()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n}\n\nfunction retry () {\n  var elem = fs[gracefulQueue].shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n","var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    read.__proto__ = fs$read\n    return read\n  })(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = clone\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: obj.__proto__ }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n","var fs = require('fs'),\n    path = require('path');\n\nmodule.exports = ncp;\nncp.ncp = ncp;\n\nfunction ncp (source, dest, options, callback) {\n  var cback = callback;\n\n  if (!callback) {\n    cback = options;\n    options = {};\n  }\n\n  var basePath = process.cwd(),\n      currentPath = path.resolve(basePath, source),\n      targetPath = path.resolve(basePath, dest),\n      filter = options.filter,\n      rename = options.rename,\n      transform = options.transform,\n      clobber = options.clobber !== false,\n      modified = options.modified,\n      dereference = options.dereference,\n      errs = null,\n      started = 0,\n      finished = 0,\n      running = 0,\n      limit = options.limit || ncp.limit || 16;\n\n  limit = (limit < 1) ? 1 : (limit > 512) ? 512 : limit;\n\n  startCopy(currentPath);\n  \n  function startCopy(source) {\n    started++;\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return cb(true);\n        }\n      }\n      else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return cb(true);\n        }\n      }\n    }\n    return getStats(source);\n  }\n\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source);\n      });\n    }\n    running++;\n    stat(source, function (err, stats) {\n      var item = {};\n      if (err) {\n        return onError(err);\n      }\n\n      // We need to get the mode from the stats object and preserve it.\n      item.name = source;\n      item.mode = stats.mode;\n      item.mtime = stats.mtime; //modified time\n      item.atime = stats.atime; //access time\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      }\n      else if (stats.isFile()) {\n        return onFile(item);\n      }\n      else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath);\n    if(rename) {\n      target =  rename(target);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return copyFile(file, target);\n      }\n      if(clobber) {\n        rmFile(target, function () {\n          copyFile(file, target);\n        });\n      }\n      if (modified) {\n        var stat = dereference ? fs.stat : fs.lstat;\n        stat(target, function(err, stats) {\n            //if souce modified time greater to target modified time copy file\n            if (file.mtime.getTime()>stats.mtime.getTime())\n                copyFile(file, target);\n            else return cb();\n        });\n      }\n      else {\n        return cb();\n      }\n    });\n  }\n\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name),\n        writeStream = fs.createWriteStream(target, { mode: file.mode });\n    \n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n    \n    if(transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function() {\n        readStream.pipe(writeStream);\n      });\n    }\n    writeStream.once('finish', function() {\n        if (modified) {\n            //target file modified date sync.\n            fs.utimesSync(target, file.atime, file.mtime);\n            cb();\n        }\n        else cb();\n    });\n  }\n\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return done();\n    });\n  }\n\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) {\n        return onError(err);\n      }\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return cb();\n    });\n  }\n\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) {\n        return onError(err);\n      }\n      checkLink(resolvedPath, target);\n    });\n  }\n\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) {\n          return onError(err);\n        }\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n        if (targetDest === resolvedPath) {\n          return cb();\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return cb();\n    });\n  }\n\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n      return done(false);\n    });\n  }\n\n  function onError(err) {\n    if (options.stopOnError) {\n      return cback(err);\n    }\n    else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs);\n    }\n    else if (!errs) {\n      errs = [];\n    }\n    if (typeof errs.write === 'undefined') {\n      errs.push(err);\n    }\n    else { \n      errs.write(err.stack + '\\n\\n');\n    }\n    return cb();\n  }\n\n  function cb(skipped) {\n    if (!skipped) running--;\n    finished++;\n    if ((started === finished) && (running === 0)) {\n      if (cback !== undefined ) {\n        return errs ? cback(errs) : cback(null);\n      }\n    }\n  }\n}\n\n\n","{\n  \"name\": \"@parcel/fs\",\n  \"version\": \"2.8.3\",\n  \"description\": \"Blazing fast, zero configuration web application bundler\",\n  \"license\": \"MIT\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/parcel\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/parcel-bundler/parcel.git\"\n  },\n  \"main\": \"lib/index.js\",\n  \"source\": \"src/index.js\",\n  \"types\": \"index.d.ts\",\n  \"engines\": {\n    \"node\": \">= 12.0.0\"\n  },\n  \"targets\": {\n    \"types\": false,\n    \"main\": {\n      \"includeNodeModules\": {\n        \"@parcel/core\": false,\n        \"@parcel/fs-search\": false,\n        \"@parcel/types\": false,\n        \"@parcel/utils\": false,\n        \"@parcel/watcher\": false,\n        \"@parcel/workers\": false\n      }\n    },\n    \"browser\": {\n      \"includeNodeModules\": {\n        \"@parcel/core\": false,\n        \"@parcel/fs-search\": false,\n        \"@parcel/types\": false,\n        \"@parcel/utils\": false,\n        \"@parcel/watcher\": false,\n        \"@parcel/workers\": false\n      }\n    }\n  },\n  \"scripts\": {\n    \"build-ts\": \"mkdir -p lib && flow-to-ts src/types.js > lib/types.d.ts\",\n    \"check-ts\": \"tsc --noEmit index.d.ts\"\n  },\n  \"dependencies\": {\n    \"@parcel/fs-search\": \"2.8.3\",\n    \"@parcel/types\": \"2.8.3\",\n    \"@parcel/utils\": \"2.8.3\",\n    \"@parcel/watcher\": \"^2.0.7\",\n    \"@parcel/workers\": \"2.8.3\"\n  },\n  \"devDependencies\": {\n    \"graceful-fs\": \"^4.2.4\",\n    \"ncp\": \"^2.0.0\",\n    \"nullthrows\": \"^1.1.1\",\n    \"utility-types\": \"^3.10.0\"\n  },\n  \"peerDependencies\": {\n    \"@parcel/core\": \"^2.8.3\"\n  },\n  \"browser\": {\n    \"@parcel/fs\": \"./lib/browser.js\",\n    \"./src/NodeFS.js\": \"./src/NodeFS.browser.js\"\n  },\n  \"gitHead\": \"349a6caf40ec8abb6a49fcae0765f8f8deb2073d\"\n}\n","// @flow\nimport type {FilePath} from '@parcel/types';\nimport type {FileSystem} from './types';\nimport path from 'path';\n\nexport function findNodeModule(\n  fs: FileSystem,\n  moduleName: string,\n  dir: FilePath,\n): ?FilePath {\n  let {root} = path.parse(dir);\n  while (dir !== root) {\n    // Skip node_modules directories\n    if (path.basename(dir) === 'node_modules') {\n      dir = path.dirname(dir);\n    }\n\n    try {\n      let moduleDir = path.join(dir, 'node_modules', moduleName);\n      let stats = fs.statSync(moduleDir);\n      if (stats.isDirectory()) {\n        return moduleDir;\n      }\n    } catch (err) {\n      // ignore\n    }\n\n    // Move up a directory\n    dir = path.dirname(dir);\n  }\n\n  return null;\n}\n\nexport function findAncestorFile(\n  fs: FileSystem,\n  fileNames: Array<string>,\n  dir: FilePath,\n  root: FilePath,\n): ?FilePath {\n  let {root: pathRoot} = path.parse(dir);\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (path.basename(dir) === 'node_modules') {\n      return null;\n    }\n\n    for (const fileName of fileNames) {\n      let filePath = path.join(dir, fileName);\n      try {\n        if (fs.statSync(filePath).isFile()) {\n          return filePath;\n        }\n      } catch (err) {\n        // ignore\n      }\n    }\n\n    if (dir === root || dir === pathRoot) {\n      break;\n    }\n\n    dir = path.dirname(dir);\n  }\n\n  return null;\n}\n\nexport function findFirstFile(\n  fs: FileSystem,\n  filePaths: Array<FilePath>,\n): ?FilePath {\n  for (let filePath of filePaths) {\n    try {\n      if (fs.statSync(filePath).isFile()) {\n        return filePath;\n      }\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n","// @flow\n\nimport type {FileSystem, FileOptions, ReaddirOptions, Encoding} from './types';\nimport type {FilePath} from '@parcel/types';\nimport type {\n  Event,\n  Options as WatcherOptions,\n  AsyncSubscription,\n} from '@parcel/watcher';\n\nimport path from 'path';\nimport {Readable, Writable} from 'stream';\nimport {registerSerializableClass} from '@parcel/core';\nimport {SharedBuffer} from '@parcel/utils';\nimport packageJSON from '../package.json';\nimport WorkerFarm, {Handle} from '@parcel/workers';\nimport nullthrows from 'nullthrows';\nimport EventEmitter from 'events';\nimport {findAncestorFile, findNodeModule, findFirstFile} from './find';\n\nconst instances: Map<number, MemoryFS> = new Map();\nlet id = 0;\n\ntype HandleFunction = (...args: Array<any>) => any;\ntype SerializedMemoryFS = {\n  id: number,\n  handle: any,\n  dirs: Map<FilePath, Directory>,\n  files: Map<FilePath, File>,\n  symlinks: Map<FilePath, FilePath>,\n  ...\n};\n\ntype WorkerEvent = {|\n  type: 'writeFile' | 'unlink' | 'mkdir' | 'symlink',\n  path: FilePath,\n  entry?: Entry,\n  target?: FilePath,\n|};\n\ntype ResolveFunction = () => mixed;\n\nexport class MemoryFS implements FileSystem {\n  dirs: Map<FilePath, Directory>;\n  files: Map<FilePath, File>;\n  symlinks: Map<FilePath, FilePath>;\n  watchers: Map<FilePath, Set<Watcher>>;\n  events: Array<Event>;\n  id: number;\n  handle: Handle;\n  farm: WorkerFarm;\n  _cwd: FilePath;\n  _eventQueue: Array<Event>;\n  _watcherTimer: TimeoutID;\n  _numWorkerInstances: number = 0;\n  _workerHandles: Array<Handle>;\n  _workerRegisterResolves: Array<ResolveFunction> = [];\n  _emitter: EventEmitter = new EventEmitter();\n\n  constructor(workerFarm: WorkerFarm) {\n    this.farm = workerFarm;\n    this.dirs = new Map([['/', new Directory()]]);\n    this.files = new Map();\n    this.symlinks = new Map();\n    this.watchers = new Map();\n    this.events = [];\n    this.id = id++;\n    this._cwd = '/';\n    this._workerHandles = [];\n    this._eventQueue = [];\n    instances.set(this.id, this);\n    this._emitter.on('allWorkersRegistered', () => {\n      for (let resolve of this._workerRegisterResolves) {\n        resolve();\n      }\n      this._workerRegisterResolves = [];\n    });\n  }\n\n  static deserialize(opts: SerializedMemoryFS): MemoryFS | WorkerFS {\n    let existing = instances.get(opts.id);\n    if (existing != null) {\n      // Correct the count of worker instances since serialization assumes a new instance is created\n      WorkerFarm.getWorkerApi().runHandle(opts.handle, [\n        'decrementWorkerInstance',\n        [],\n      ]);\n      return existing;\n    }\n\n    let fs = new WorkerFS(opts.id, nullthrows(opts.handle));\n    fs.dirs = opts.dirs;\n    fs.files = opts.files;\n    fs.symlinks = opts.symlinks;\n    return fs;\n  }\n\n  serialize(): SerializedMemoryFS {\n    if (!this.handle) {\n      this.handle = this.farm.createReverseHandle(\n        (fn: string, args: Array<mixed>) => {\n          // $FlowFixMe\n          return this[fn](...args);\n        },\n      );\n    }\n\n    // If a worker instance already exists, it will decrement this number\n    this._numWorkerInstances++;\n\n    return {\n      $$raw: false,\n      id: this.id,\n      handle: this.handle,\n      dirs: this.dirs,\n      files: this.files,\n      symlinks: this.symlinks,\n    };\n  }\n\n  decrementWorkerInstance() {\n    this._numWorkerInstances--;\n    if (this._numWorkerInstances === this._workerHandles.length) {\n      this._emitter.emit('allWorkersRegistered');\n    }\n  }\n\n  cwd(): FilePath {\n    return this._cwd;\n  }\n\n  chdir(dir: FilePath) {\n    this._cwd = dir;\n  }\n\n  _normalizePath(filePath: FilePath, realpath: boolean = true): FilePath {\n    filePath = path.resolve(this.cwd(), filePath);\n\n    // get realpath by following symlinks\n    if (realpath) {\n      let {root, dir, base} = path.parse(filePath);\n      let parts = dir.slice(root.length).split(path.sep).concat(base);\n      let res = root;\n      for (let part of parts) {\n        res = path.join(res, part);\n        let symlink = this.symlinks.get(res);\n        if (symlink) {\n          res = symlink;\n        }\n      }\n\n      return res;\n    }\n\n    return filePath;\n  }\n\n  async writeFile(\n    filePath: FilePath,\n    contents: Buffer | string,\n    options?: ?FileOptions,\n  ) {\n    filePath = this._normalizePath(filePath);\n    if (this.dirs.has(filePath)) {\n      throw new FSError('EISDIR', filePath, 'is a directory');\n    }\n\n    let dir = path.dirname(filePath);\n    if (!this.dirs.has(dir)) {\n      throw new FSError('ENOENT', dir, 'does not exist');\n    }\n\n    let buffer = makeShared(contents);\n    let file = this.files.get(filePath);\n    let mode = (options && options.mode) || 0o666;\n    if (file) {\n      file.write(buffer, mode);\n      this.files.set(filePath, file);\n    } else {\n      this.files.set(filePath, new File(buffer, mode));\n    }\n\n    await this._sendWorkerEvent({\n      type: 'writeFile',\n      path: filePath,\n      entry: this.files.get(filePath),\n    });\n\n    this._triggerEvent({\n      type: file ? 'update' : 'create',\n      path: filePath,\n    });\n  }\n\n  // eslint-disable-next-line require-await\n  async readFile(filePath: FilePath, encoding?: Encoding): Promise<any> {\n    return this.readFileSync(filePath, encoding);\n  }\n\n  readFileSync(filePath: FilePath, encoding?: Encoding): any {\n    filePath = this._normalizePath(filePath);\n    let file = this.files.get(filePath);\n    if (file == null) {\n      throw new FSError('ENOENT', filePath, 'does not exist');\n    }\n\n    let buffer = file.read();\n    if (encoding) {\n      return buffer.toString(encoding);\n    }\n\n    return buffer;\n  }\n\n  async copyFile(source: FilePath, destination: FilePath) {\n    let contents = await this.readFile(source);\n    await this.writeFile(destination, contents);\n  }\n\n  statSync(filePath: FilePath): Stat {\n    filePath = this._normalizePath(filePath);\n\n    let dir = this.dirs.get(filePath);\n    if (dir) {\n      return dir.stat();\n    }\n\n    let file = this.files.get(filePath);\n    if (file == null) {\n      throw new FSError('ENOENT', filePath, 'does not exist');\n    }\n\n    return file.stat();\n  }\n\n  // eslint-disable-next-line require-await\n  async stat(filePath: FilePath): Promise<Stat> {\n    return this.statSync(filePath);\n  }\n\n  readdirSync(dir: FilePath, opts?: ReaddirOptions): any {\n    dir = this._normalizePath(dir);\n    if (!this.dirs.has(dir)) {\n      throw new FSError('ENOENT', dir, 'does not exist');\n    }\n\n    dir += path.sep;\n\n    let res = [];\n    for (let [filePath, entry] of this.dirs) {\n      if (\n        filePath.startsWith(dir) &&\n        filePath.indexOf(path.sep, dir.length) === -1\n      ) {\n        let name = filePath.slice(dir.length);\n        if (opts?.withFileTypes) {\n          res.push(new Dirent(name, entry));\n        } else {\n          res.push(name);\n        }\n      }\n    }\n\n    for (let [filePath, entry] of this.files) {\n      if (\n        filePath.startsWith(dir) &&\n        filePath.indexOf(path.sep, dir.length) === -1\n      ) {\n        let name = filePath.slice(dir.length);\n        if (opts?.withFileTypes) {\n          res.push(new Dirent(name, entry));\n        } else {\n          res.push(name);\n        }\n      }\n    }\n\n    for (let [from] of this.symlinks) {\n      if (from.startsWith(dir) && from.indexOf(path.sep, dir.length) === -1) {\n        let name = from.slice(dir.length);\n        if (opts?.withFileTypes) {\n          res.push(new Dirent(name, {mode: S_IFLNK}));\n        } else {\n          res.push(name);\n        }\n      }\n    }\n\n    return res;\n  }\n\n  // eslint-disable-next-line require-await\n  async readdir(dir: FilePath, opts?: ReaddirOptions): Promise<any> {\n    return this.readdirSync(dir, opts);\n  }\n\n  async unlink(filePath: FilePath): Promise<void> {\n    filePath = this._normalizePath(filePath);\n    if (!this.files.has(filePath) && !this.dirs.has(filePath)) {\n      throw new FSError('ENOENT', filePath, 'does not exist');\n    }\n\n    this.files.delete(filePath);\n    this.dirs.delete(filePath);\n    this.watchers.delete(filePath);\n\n    await this._sendWorkerEvent({\n      type: 'unlink',\n      path: filePath,\n    });\n\n    this._triggerEvent({\n      type: 'delete',\n      path: filePath,\n    });\n\n    return Promise.resolve();\n  }\n\n  async mkdirp(dir: FilePath): Promise<void> {\n    dir = this._normalizePath(dir);\n    if (this.dirs.has(dir)) {\n      return Promise.resolve();\n    }\n\n    if (this.files.has(dir)) {\n      throw new FSError('ENOENT', dir, 'is not a directory');\n    }\n\n    let root = path.parse(dir).root;\n    while (dir !== root) {\n      if (this.dirs.has(dir)) {\n        break;\n      }\n\n      this.dirs.set(dir, new Directory());\n      await this._sendWorkerEvent({\n        type: 'mkdir',\n        path: dir,\n      });\n\n      this._triggerEvent({\n        type: 'create',\n        path: dir,\n      });\n\n      dir = path.dirname(dir);\n    }\n\n    return Promise.resolve();\n  }\n\n  async rimraf(filePath: FilePath): Promise<void> {\n    filePath = this._normalizePath(filePath);\n\n    if (this.dirs.has(filePath)) {\n      let dir = filePath + path.sep;\n      for (let filePath of this.files.keys()) {\n        if (filePath.startsWith(dir)) {\n          this.files.delete(filePath);\n          await this._sendWorkerEvent({\n            type: 'unlink',\n            path: filePath,\n          });\n\n          this._triggerEvent({\n            type: 'delete',\n            path: filePath,\n          });\n        }\n      }\n\n      for (let dirPath of this.dirs.keys()) {\n        if (dirPath.startsWith(dir)) {\n          this.dirs.delete(dirPath);\n          this.watchers.delete(dirPath);\n          await this._sendWorkerEvent({\n            type: 'unlink',\n            path: filePath,\n          });\n\n          this._triggerEvent({\n            type: 'delete',\n            path: dirPath,\n          });\n        }\n      }\n\n      for (let filePath of this.symlinks.keys()) {\n        if (filePath.startsWith(dir)) {\n          this.symlinks.delete(filePath);\n          await this._sendWorkerEvent({\n            type: 'unlink',\n            path: filePath,\n          });\n        }\n      }\n\n      this.dirs.delete(filePath);\n      await this._sendWorkerEvent({\n        type: 'unlink',\n        path: filePath,\n      });\n\n      this._triggerEvent({\n        type: 'delete',\n        path: filePath,\n      });\n    } else if (this.files.has(filePath)) {\n      this.files.delete(filePath);\n      await this._sendWorkerEvent({\n        type: 'unlink',\n        path: filePath,\n      });\n\n      this._triggerEvent({\n        type: 'delete',\n        path: filePath,\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  async ncp(source: FilePath, destination: FilePath) {\n    source = this._normalizePath(source);\n\n    if (this.dirs.has(source)) {\n      if (!this.dirs.has(destination)) {\n        this.dirs.set(destination, new Directory());\n        await this._sendWorkerEvent({\n          type: 'mkdir',\n          path: destination,\n        });\n\n        this._triggerEvent({\n          type: 'create',\n          path: destination,\n        });\n      }\n\n      let dir = source + path.sep;\n      for (let dirPath of this.dirs.keys()) {\n        if (dirPath.startsWith(dir)) {\n          let destName = path.join(destination, dirPath.slice(dir.length));\n          if (!this.dirs.has(destName)) {\n            this.dirs.set(destName, new Directory());\n            await this._sendWorkerEvent({\n              type: 'mkdir',\n              path: destination,\n            });\n            this._triggerEvent({\n              type: 'create',\n              path: destName,\n            });\n          }\n        }\n      }\n\n      for (let [filePath, file] of this.files) {\n        if (filePath.startsWith(dir)) {\n          let destName = path.join(destination, filePath.slice(dir.length));\n          let exists = this.files.has(destName);\n          this.files.set(destName, file);\n          await this._sendWorkerEvent({\n            type: 'writeFile',\n            path: destName,\n            entry: file,\n          });\n\n          this._triggerEvent({\n            type: exists ? 'update' : 'create',\n            path: destName,\n          });\n        }\n      }\n    } else {\n      await this.copyFile(source, destination);\n    }\n  }\n\n  createReadStream(filePath: FilePath): ReadStream {\n    return new ReadStream(this, filePath);\n  }\n\n  createWriteStream(filePath: FilePath, options: ?FileOptions): WriteStream {\n    return new WriteStream(this, filePath, options);\n  }\n\n  realpathSync(filePath: FilePath): FilePath {\n    return this._normalizePath(filePath);\n  }\n\n  // eslint-disable-next-line require-await\n  async realpath(filePath: FilePath): Promise<FilePath> {\n    return this.realpathSync(filePath);\n  }\n\n  async symlink(target: FilePath, path: FilePath) {\n    target = this._normalizePath(target);\n    path = this._normalizePath(path);\n    this.symlinks.set(path, target);\n    await this._sendWorkerEvent({\n      type: 'symlink',\n      path,\n      target,\n    });\n  }\n\n  existsSync(filePath: FilePath): boolean {\n    filePath = this._normalizePath(filePath);\n    return this.files.has(filePath) || this.dirs.has(filePath);\n  }\n\n  // eslint-disable-next-line require-await\n  async exists(filePath: FilePath): Promise<boolean> {\n    return this.existsSync(filePath);\n  }\n\n  _triggerEvent(event: Event) {\n    this.events.push(event);\n    if (this.watchers.size === 0) {\n      return;\n    }\n\n    // Batch events\n    this._eventQueue.push(event);\n    clearTimeout(this._watcherTimer);\n\n    this._watcherTimer = setTimeout(() => {\n      let events = this._eventQueue;\n      this._eventQueue = [];\n\n      for (let [dir, watchers] of this.watchers) {\n        if (!dir.endsWith(path.sep)) {\n          dir += path.sep;\n        }\n\n        if (event.path.startsWith(dir)) {\n          for (let watcher of watchers) {\n            watcher.trigger(events);\n          }\n        }\n      }\n    }, 50);\n  }\n\n  _registerWorker(handle: Handle) {\n    this._workerHandles.push(handle);\n    if (this._numWorkerInstances === this._workerHandles.length) {\n      this._emitter.emit('allWorkersRegistered');\n    }\n  }\n\n  async _sendWorkerEvent(event: WorkerEvent) {\n    // Wait for worker instances to register their handles\n    while (this._workerHandles.length < this._numWorkerInstances) {\n      await new Promise(resolve => this._workerRegisterResolves.push(resolve));\n    }\n\n    await Promise.all(\n      this._workerHandles.map(workerHandle =>\n        this.farm.workerApi.runHandle(workerHandle, [event]),\n      ),\n    );\n  }\n\n  watch(\n    dir: FilePath,\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    opts: WatcherOptions,\n  ): Promise<AsyncSubscription> {\n    dir = this._normalizePath(dir);\n    let watcher = new Watcher(fn, opts);\n    let watchers = this.watchers.get(dir);\n    if (!watchers) {\n      watchers = new Set();\n      this.watchers.set(dir, watchers);\n    }\n\n    watchers.add(watcher);\n\n    return Promise.resolve({\n      unsubscribe: () => {\n        watchers = nullthrows(watchers);\n        watchers.delete(watcher);\n\n        if (watchers.size === 0) {\n          this.watchers.delete(dir);\n        }\n\n        return Promise.resolve();\n      },\n    });\n  }\n\n  async getEventsSince(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<Array<Event>> {\n    let contents = await this.readFile(snapshot, 'utf8');\n    let len = Number(contents);\n    let events = this.events.slice(len);\n    let ignore = opts.ignore;\n    if (ignore) {\n      events = events.filter(\n        event => !ignore.some(i => event.path.startsWith(i + path.sep)),\n      );\n    }\n\n    return events;\n  }\n\n  async writeSnapshot(dir: FilePath, snapshot: FilePath): Promise<void> {\n    await this.writeFile(snapshot, '' + this.events.length);\n  }\n\n  findAncestorFile(\n    fileNames: Array<string>,\n    fromDir: FilePath,\n    root: FilePath,\n  ): ?FilePath {\n    return findAncestorFile(this, fileNames, fromDir, root);\n  }\n\n  findNodeModule(moduleName: string, fromDir: FilePath): ?FilePath {\n    return findNodeModule(this, moduleName, fromDir);\n  }\n\n  findFirstFile(filePaths: Array<FilePath>): ?FilePath {\n    return findFirstFile(this, filePaths);\n  }\n}\n\nclass Watcher {\n  fn: (err: ?Error, events: Array<Event>) => mixed;\n  options: WatcherOptions;\n\n  constructor(\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    options: WatcherOptions,\n  ) {\n    this.fn = fn;\n    this.options = options;\n  }\n\n  trigger(events: Array<Event>) {\n    let ignore = this.options.ignore;\n    if (ignore) {\n      events = events.filter(\n        event => !ignore.some(i => event.path.startsWith(i + path.sep)),\n      );\n    }\n\n    if (events.length > 0) {\n      this.fn(null, events);\n    }\n  }\n}\n\nclass FSError extends Error {\n  code: string;\n  path: FilePath;\n  constructor(code: string, path: FilePath, message: string) {\n    super(`${code}: ${path} ${message}`);\n    this.name = 'FSError';\n    this.code = code;\n    this.path = path;\n    Error.captureStackTrace?.(this, this.constructor);\n  }\n}\n\nclass ReadStream extends Readable {\n  fs: FileSystem;\n  filePath: FilePath;\n  reading: boolean;\n  bytesRead: number;\n  constructor(fs: FileSystem, filePath: FilePath) {\n    super();\n    this.fs = fs;\n    this.filePath = filePath;\n    this.reading = false;\n    this.bytesRead = 0;\n  }\n\n  _read() {\n    if (this.reading) {\n      return;\n    }\n\n    this.reading = true;\n    this.fs.readFile(this.filePath).then(\n      res => {\n        this.bytesRead += res.byteLength;\n        this.push(res);\n        this.push(null);\n      },\n      err => {\n        this.emit('error', err);\n      },\n    );\n  }\n}\n\nclass WriteStream extends Writable {\n  fs: FileSystem;\n  filePath: FilePath;\n  options: ?FileOptions;\n  buffer: Buffer;\n\n  constructor(fs: FileSystem, filePath: FilePath, options: ?FileOptions) {\n    super({emitClose: true, autoDestroy: true});\n    this.fs = fs;\n    this.filePath = filePath;\n    this.options = options;\n    this.buffer = Buffer.alloc(0);\n  }\n\n  _write(\n    chunk: Buffer | string,\n    encoding: any,\n    callback: (error?: Error) => void,\n  ) {\n    let c = typeof chunk === 'string' ? Buffer.from(chunk, encoding) : chunk;\n    this.buffer = Buffer.concat([this.buffer, c]);\n    callback();\n  }\n\n  _final(callback: (error?: Error) => void) {\n    this.fs\n      .writeFile(this.filePath, this.buffer, this.options)\n      .then(callback)\n      .catch(callback);\n  }\n}\n\nconst S_IFREG = 0o100000;\nconst S_IFDIR = 0o040000;\nconst S_IFLNK = 0o120000;\n\nclass Entry {\n  mode: number;\n  atime: number;\n  mtime: number;\n  ctime: number;\n  birthtime: number;\n  constructor(mode: number) {\n    this.mode = mode;\n    let now = Date.now();\n    this.atime = now;\n    this.mtime = now;\n    this.ctime = now;\n    this.birthtime = now;\n  }\n\n  access() {\n    let now = Date.now();\n    this.atime = now;\n    this.ctime = now;\n  }\n\n  modify(mode: number) {\n    let now = Date.now();\n    this.mtime = now;\n    this.ctime = now;\n    this.mode = mode;\n  }\n\n  getSize(): number {\n    return 0;\n  }\n\n  stat(): Stat {\n    return new Stat(this);\n  }\n}\n\nclass Stat {\n  dev: number = 0;\n  ino: number = 0;\n  mode: number;\n  nlink: number = 0;\n  uid: number = 0;\n  gid: number = 0;\n  rdev: number = 0;\n  size: number;\n  blksize: number = 0;\n  blocks: number = 0;\n  atimeMs: number;\n  mtimeMs: number;\n  ctimeMs: number;\n  birthtimeMs: number;\n  atime: Date;\n  mtime: Date;\n  ctime: Date;\n  birthtime: Date;\n\n  constructor(entry: Entry) {\n    this.mode = entry.mode;\n    this.size = entry.getSize();\n    this.atimeMs = entry.atime;\n    this.mtimeMs = entry.mtime;\n    this.ctimeMs = entry.ctime;\n    this.birthtimeMs = entry.birthtime;\n    this.atime = new Date(entry.atime);\n    this.mtime = new Date(entry.mtime);\n    this.ctime = new Date(entry.ctime);\n    this.birthtime = new Date(entry.birthtime);\n  }\n\n  isFile(): boolean {\n    return Boolean(this.mode & S_IFREG);\n  }\n\n  isDirectory(): boolean {\n    return Boolean(this.mode & S_IFDIR);\n  }\n\n  isBlockDevice(): boolean {\n    return false;\n  }\n\n  isCharacterDevice(): boolean {\n    return false;\n  }\n\n  isSymbolicLink(): boolean {\n    return false;\n  }\n\n  isFIFO(): boolean {\n    return false;\n  }\n\n  isSocket(): boolean {\n    return false;\n  }\n}\n\nclass Dirent {\n  name: string;\n  #mode: number;\n\n  constructor(name: string, entry: interface {mode: number}) {\n    this.name = name;\n    this.#mode = entry.mode;\n  }\n\n  isFile(): boolean {\n    return Boolean(this.#mode & S_IFREG);\n  }\n\n  isDirectory(): boolean {\n    return Boolean(this.#mode & S_IFDIR);\n  }\n\n  isBlockDevice(): boolean {\n    return false;\n  }\n\n  isCharacterDevice(): boolean {\n    return false;\n  }\n\n  isSymbolicLink(): boolean {\n    return Boolean(this.#mode & S_IFLNK);\n  }\n\n  isFIFO(): boolean {\n    return false;\n  }\n\n  isSocket(): boolean {\n    return false;\n  }\n}\n\nclass File extends Entry {\n  buffer: Buffer;\n  constructor(buffer: Buffer, mode: number) {\n    super(S_IFREG | mode);\n    this.buffer = buffer;\n  }\n\n  read(): Buffer {\n    super.access();\n    return Buffer.from(this.buffer);\n  }\n\n  write(buffer: Buffer, mode: number) {\n    super.modify(S_IFREG | mode);\n    this.buffer = buffer;\n  }\n\n  getSize(): number {\n    return this.buffer.byteLength;\n  }\n}\n\nclass Directory extends Entry {\n  constructor() {\n    super(S_IFDIR);\n  }\n}\n\nfunction makeShared(contents: Buffer | string): Buffer {\n  if (typeof contents !== 'string' && contents.buffer instanceof SharedBuffer) {\n    return contents;\n  }\n\n  let length = Buffer.byteLength(contents);\n  let shared = new SharedBuffer(length);\n  let buffer = Buffer.from(shared);\n  if (typeof contents === 'string') {\n    buffer.write(contents);\n  } else {\n    buffer.set(contents);\n  }\n\n  return buffer;\n}\n\nclass WorkerFS extends MemoryFS {\n  id: number;\n  handleFn: HandleFunction;\n\n  constructor(id: number, handle: Handle) {\n    // TODO Make this not a subclass\n    // $FlowFixMe\n    super();\n    this.id = id;\n    this.handleFn = (methodName, args) =>\n      WorkerFarm.getWorkerApi().runHandle(handle, [methodName, args]);\n\n    this.handleFn('_registerWorker', [\n      WorkerFarm.getWorkerApi().createReverseHandle(event => {\n        switch (event.type) {\n          case 'writeFile':\n            this.files.set(event.path, event.entry);\n            break;\n          case 'unlink':\n            this.files.delete(event.path);\n            this.dirs.delete(event.path);\n            this.symlinks.delete(event.path);\n            break;\n          case 'mkdir':\n            this.dirs.set(event.path, new Directory());\n            break;\n          case 'symlink':\n            this.symlinks.set(event.path, event.target);\n            break;\n        }\n      }),\n    ]);\n  }\n\n  static deserialize(opts: SerializedMemoryFS): MemoryFS {\n    return nullthrows(instances.get(opts.id));\n  }\n\n  serialize(): SerializedMemoryFS {\n    // $FlowFixMe\n    return {\n      id: this.id,\n    };\n  }\n\n  writeFile(\n    filePath: FilePath,\n    contents: Buffer | string,\n    options: ?FileOptions,\n  ): Promise<void> {\n    super.writeFile(filePath, contents, options);\n    let buffer = makeShared(contents);\n    return this.handleFn('writeFile', [filePath, buffer, options]);\n  }\n\n  unlink(filePath: FilePath): Promise<void> {\n    super.unlink(filePath);\n    return this.handleFn('unlink', [filePath]);\n  }\n\n  mkdirp(dir: FilePath): Promise<void> {\n    super.mkdirp(dir);\n    return this.handleFn('mkdirp', [dir]);\n  }\n\n  rimraf(filePath: FilePath): Promise<void> {\n    super.rimraf(filePath);\n    return this.handleFn('rimraf', [filePath]);\n  }\n\n  ncp(source: FilePath, destination: FilePath): Promise<void> {\n    super.ncp(source, destination);\n    return this.handleFn('ncp', [source, destination]);\n  }\n\n  symlink(target: FilePath, path: FilePath): Promise<void> {\n    super.symlink(target, path);\n    return this.handleFn('symlink', [target, path]);\n  }\n}\n\nregisterSerializableClass(`${packageJSON.version}:MemoryFS`, MemoryFS);\nregisterSerializableClass(`${packageJSON.version}:WorkerFS`, WorkerFS);\nregisterSerializableClass(`${packageJSON.version}:Stat`, Stat);\nregisterSerializableClass(`${packageJSON.version}:File`, File);\nregisterSerializableClass(`${packageJSON.version}:Directory`, Directory);\n","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","// @flow\n\nimport type {Stats} from 'fs';\nimport type {FileSystem, ReaddirOptions} from './types';\nimport type {FilePath} from '@parcel/types';\nimport type {\n  Event,\n  Options as WatcherOptions,\n  AsyncSubscription,\n} from '@parcel/watcher';\n\nimport {registerSerializableClass} from '@parcel/core';\nimport packageJSON from '../package.json';\nimport {findAncestorFile, findNodeModule, findFirstFile} from './find';\n\nfunction read(method) {\n  return async function (...args: Array<any>) {\n    try {\n      return await this.writable[method](...args);\n    } catch (err) {\n      return this.readable[method](...args);\n    }\n  };\n}\n\nfunction readSync(method) {\n  return function (...args: Array<any>) {\n    try {\n      return this.writable[method](...args);\n    } catch (err) {\n      return this.readable[method](...args);\n    }\n  };\n}\n\nfunction write(method) {\n  return function (...args: Array<any>) {\n    return this.writable[method](...args);\n  };\n}\n\nfunction checkExists(method) {\n  return function (filePath: FilePath, ...args: Array<any>) {\n    if (this.writable.existsSync(filePath)) {\n      return this.writable[method](filePath, ...args);\n    }\n\n    return this.readable[method](filePath, ...args);\n  };\n}\n\nexport class OverlayFS implements FileSystem {\n  writable: FileSystem;\n  readable: FileSystem;\n  constructor(writable: FileSystem, readable: FileSystem) {\n    this.writable = writable;\n    this.readable = readable;\n  }\n\n  static deserialize(opts: any): OverlayFS {\n    return new OverlayFS(opts.writable, opts.readable);\n  }\n\n  serialize(): {|$$raw: boolean, readable: FileSystem, writable: FileSystem|} {\n    return {\n      $$raw: false,\n      writable: this.writable,\n      readable: this.readable,\n    };\n  }\n\n  readFile: (...args: Array<any>) => Promise<Buffer & string & $Shape<Stats>> =\n    read('readFile');\n  writeFile: (...args: Array<any>) => any = write('writeFile');\n  async copyFile(source: FilePath, destination: FilePath) {\n    if (await this.writable.exists(source)) {\n      await this.writable.writeFile(\n        destination,\n        await this.writable.readFile(source),\n      );\n    } else {\n      await this.writable.writeFile(\n        destination,\n        await this.readable.readFile(source),\n      );\n    }\n  }\n  stat: (...args: Array<any>) => Promise<Buffer & string & $Shape<Stats>> =\n    read('stat');\n  unlink: (...args: Array<any>) => any = write('unlink');\n  mkdirp: (...args: Array<any>) => any = write('mkdirp');\n  rimraf: (...args: Array<any>) => any = write('rimraf');\n  ncp: (...args: Array<any>) => any = write('ncp');\n  createReadStream: (filePath: FilePath, ...args: Array<any>) => any =\n    checkExists('createReadStream');\n  createWriteStream: (...args: Array<any>) => any = write('createWriteStream');\n  cwd: (...args: Array<any>) => any = readSync('cwd');\n  chdir: (...args: Array<any>) => any = readSync('chdir');\n  realpath: (filePath: FilePath, ...args: Array<any>) => any =\n    checkExists('realpath');\n\n  readFileSync: (...args: Array<any>) => any = readSync('readFileSync');\n  statSync: (...args: Array<any>) => any = readSync('statSync');\n  existsSync: (...args: Array<any>) => any = readSync('existsSync');\n  realpathSync: (filePath: FilePath, ...args: Array<any>) => any =\n    checkExists('realpathSync');\n\n  async exists(filePath: FilePath): Promise<boolean> {\n    return (\n      (await this.writable.exists(filePath)) || this.readable.exists(filePath)\n    );\n  }\n\n  async readdir(path: FilePath, opts?: ReaddirOptions): Promise<any> {\n    // Read from both filesystems and merge the results\n    let writable = [];\n    let readable = [];\n    try {\n      writable = await this.writable.readdir(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    try {\n      readable = await this.readable.readdir(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    return Array.from(new Set([...writable, ...readable]));\n  }\n\n  readdirSync(path: FilePath, opts?: ReaddirOptions): any {\n    // Read from both filesystems and merge the results\n    let writable = [];\n    let readable = [];\n    try {\n      writable = this.writable.readdirSync(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    try {\n      readable = this.readable.readdirSync(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    return Array.from(new Set([...writable, ...readable]));\n  }\n\n  async watch(\n    dir: FilePath,\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    opts: WatcherOptions,\n  ): Promise<AsyncSubscription> {\n    let writableSubscription = await this.writable.watch(dir, fn, opts);\n    let readableSubscription = await this.readable.watch(dir, fn, opts);\n    return {\n      unsubscribe: async () => {\n        await writableSubscription.unsubscribe();\n        await readableSubscription.unsubscribe();\n      },\n    };\n  }\n\n  async getEventsSince(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<Array<Event>> {\n    let writableEvents = await this.writable.getEventsSince(\n      dir,\n      snapshot,\n      opts,\n    );\n    let readableEvents = await this.readable.getEventsSince(\n      dir,\n      snapshot,\n      opts,\n    );\n    return [...writableEvents, ...readableEvents];\n  }\n\n  async writeSnapshot(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<void> {\n    await this.writable.writeSnapshot(dir, snapshot, opts);\n  }\n\n  findAncestorFile(\n    fileNames: Array<string>,\n    fromDir: FilePath,\n    root: FilePath,\n  ): ?FilePath {\n    return findAncestorFile(this, fileNames, fromDir, root);\n  }\n\n  findNodeModule(moduleName: string, fromDir: FilePath): ?FilePath {\n    return findNodeModule(this, moduleName, fromDir);\n  }\n\n  findFirstFile(filePaths: Array<FilePath>): ?FilePath {\n    return findFirstFile(this, filePaths);\n  }\n}\n\nregisterSerializableClass(`${packageJSON.version}:OverlayFS`, OverlayFS);\n"],"names":["path","stream","promisify","pipeline","ncp","sourceFS","source","destinationFS","destination","mkdirp","files","readdir","file","sourcePath","join","destPath","stats","stat","isFile","createReadStream","createWriteStream","isDirectory","fs","nativeFS","registerSerializableClass","hashFile","watcher","packageJSON","searchNative","searchJS","realpath","process","platform","native","isPnP","versions","pnp","NodeFS","readFile","copyFile","unlink","utimes","cwd","chdir","directory","statSync","realpathSync","existsSync","readdirSync","findAncestorFile","args","findNodeModule","findFirstFile","filePath","options","tmpFilePath","getTempFilePath","failed","move","promises","rename","e","syscall","code","hashTmp","hashTarget","Promise","all","writeStream","close","fd","cb","err","then","once","unlinkSync","writeFile","contents","readFileSync","encoding","originalPath","exists","resolve","watch","dir","fn","opts","subscribe","getEventsSince","snapshot","writeSnapshot","deserialize","serialize","mkdir","recursive","rimraf","rm","force","rmdir","version","writeStreamCalls","threadId","require","Number","MAX_SAFE_INTEGER","pid","toString","module","exports","JSON","parse","moduleName","root","basename","dirname","moduleDir","fileNames","pathRoot","fileName","filePaths","Readable","Writable","SharedBuffer","WorkerFarm","Handle","nullthrows","EventEmitter","instances","Map","id","MemoryFS","_numWorkerInstances","_workerRegisterResolves","_emitter","constructor","workerFarm","farm","dirs","Directory","symlinks","watchers","events","_cwd","_workerHandles","_eventQueue","set","on","existing","get","getWorkerApi","runHandle","handle","WorkerFS","createReverseHandle","$$raw","decrementWorkerInstance","length","emit","_normalizePath","base","parts","slice","split","sep","concat","res","part","symlink","has","FSError","buffer","makeShared","mode","write","File","_sendWorkerEvent","type","entry","_triggerEvent","read","startsWith","indexOf","name","withFileTypes","push","Dirent","from","S_IFLNK","delete","keys","dirPath","destName","ReadStream","WriteStream","target","event","size","clearTimeout","_watcherTimer","setTimeout","endsWith","trigger","_registerWorker","map","workerHandle","workerApi","Watcher","Set","add","unsubscribe","len","ignore","filter","some","i","fromDir","Error","message","captureStackTrace","reading","bytesRead","_read","byteLength","emitClose","autoDestroy","Buffer","alloc","_write","chunk","callback","c","_final","catch","S_IFREG","S_IFDIR","Entry","now","Date","atime","mtime","ctime","birthtime","access","modify","getSize","Stat","dev","ino","nlink","uid","gid","rdev","blksize","blocks","atimeMs","mtimeMs","ctimeMs","birthtimeMs","Boolean","isBlockDevice","isCharacterDevice","isSymbolicLink","isFIFO","isSocket","shared","handleFn","methodName","method","writable","readable","readSync","checkExists","OverlayFS","Array","writableSubscription","readableSubscription","writableEvents","readableEvents"],"version":3,"file":"index.js.map","sourceRoot":"../../../../"}